/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista_SCACV;

import Controlador_SCACV.EstadoMovimiento;
import java.awt.Color;
import static javax.swing.JComponent.TOOL_TIP_TEXT_KEY;

/**
 *
 * @author Marina
 */
public class PanelControl extends javax.swing.JPanel {

    public boolean arrancar_o_parar = false;
    public boolean frenar_o_soltar = false;
    public boolean acelerar_o_soltar = false;
    
    public PanelControl() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel3 = new javax.swing.JLabel();
        estadoActual = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        botonArrancar = new javax.swing.JToggleButton();
        botonFrenar = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        velocidad = new javax.swing.JLabel();
        botonAcelerar = new javax.swing.JToggleButton();

        jLabel3.setText("jLabel3");

        setBackground(new java.awt.Color(41, 62, 69));
        setPreferredSize(new java.awt.Dimension(170, 330));

        estadoActual.setBackground(new java.awt.Color(221, 201, 180));
        estadoActual.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        estadoActual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        estadoActual.setText("APAGADO");
        estadoActual.setAlignmentY(0.0F);
        estadoActual.setOpaque(true);

        jLabel1.setBackground(new java.awt.Color(221, 201, 180));
        jLabel1.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ESTADO:");
        jLabel1.setIconTextGap(0);
        jLabel1.setOpaque(true);

        botonArrancar.setBackground(new java.awt.Color(193, 124, 116));
        botonArrancar.setText("ARRANCAR");
        botonArrancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArrancarActionPerformed(evt);
            }
        });

        botonFrenar.setBackground(new java.awt.Color(193, 124, 116));
        botonFrenar.setText("PISAR FRENO");
        botonFrenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFrenarActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("VELOCIDAD AUTOMÁTICA");

        velocidad.setForeground(new java.awt.Color(240, 240, 240));
        velocidad.setText("N/A");
        velocidad.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        botonAcelerar.setBackground(new java.awt.Color(193, 124, 116));
        botonAcelerar.setText("PISAR ACELERADOR");
        botonAcelerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAcelerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(velocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonAcelerar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonArrancar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(estadoActual, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(botonFrenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estadoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonArrancar)
                .addGap(18, 18, 18)
                .addComponent(botonAcelerar)
                .addGap(18, 18, 18)
                .addComponent(botonFrenar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(velocidad))
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void mantenerFreno(boolean encender){ //El boton se mantiene segun el estado del bool
            botonFrenar.setSelected(encender);
            frenar_o_soltar = false;
            if(encender)
                botonFrenar.setText("SOLTAR FRENO");
            else
                botonFrenar.setText("PISAR FRENO");
    }
    
    public void mantenerArrancar(boolean encender){
            botonArrancar.setSelected(encender);
            arrancar_o_parar = false;
            if(encender)
                botonArrancar.setText("APAGAR");
            else
                botonArrancar.setText("ARRANCAR");     
    }
    
      public void mantenerAcelerador(boolean encender) {
         botonAcelerar.setSelected(encender);
         acelerar_o_soltar = false;
         if(encender)
            botonAcelerar.setText("SOLTAR ACELERADOR");
         else
            botonAcelerar.setText("PISAR ACELERADOR");
    }
    
    
    private void botonArrancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArrancarActionPerformed
        if(botonArrancar.isSelected()){
            arrancar_o_parar = true;
            botonArrancar.setText("APAGAR");
        }
        else{
            arrancar_o_parar = true;
            botonArrancar.setText("ARRANCAR");
        }
    }//GEN-LAST:event_botonArrancarActionPerformed

    private void botonFrenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFrenarActionPerformed
        if(botonFrenar.isSelected()){
            frenar_o_soltar = true;
            botonFrenar.setText("SOLTAR FRENO");
        }
        else{
            frenar_o_soltar = true;
            botonFrenar.setText("PISAR FRENO");
        }
    }//GEN-LAST:event_botonFrenarActionPerformed

    private void botonAcelerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAcelerarActionPerformed
        if(botonAcelerar.isSelected()){
            acelerar_o_soltar = true;
            botonAcelerar.setText("SOLTAR ACELERADOR");
        }
        else{
            acelerar_o_soltar = true;
            botonAcelerar.setText("PISAR ACELERADOR");
        }
    }//GEN-LAST:event_botonAcelerarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botonAcelerar;
    private javax.swing.JToggleButton botonArrancar;
    private javax.swing.JToggleButton botonFrenar;
    private javax.swing.JLabel estadoActual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLabel velocidad;
    // End of variables declaration//GEN-END:variables

 
    
    public void repintar(EstadoMovimiento estado, double velocidadAlmacenada){
        
        switch(estado){
            case APAGADO:
                estadoActual.setText("APAGADO");
            break;
                
            case PARADO:
                estadoActual.setText("DESACELERACIÓN");
            break;
                
            case ACELERANDO:
                estadoActual.setText("ACELERANDO");
            break;
                
            case FRENANDO:
                estadoActual.setText("FRENANDO");
            break;
                
            case MANTENIENDO:
                estadoActual.setText("MANTENIENDO");
            break;
                
            case REINICIANDO:
                estadoActual.setText("REINICIANDO");
            break;
        }
        if(velocidadAlmacenada == 0.0)
            velocidad.setText("N/A");
        else
            velocidad.setText(""+(int)velocidadAlmacenada);
    }




}
